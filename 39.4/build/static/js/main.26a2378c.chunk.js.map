{"version":3,"sources":["EightBall.js","App.js","reportWebVitals.js","index.js"],"names":["EightBall","answers","useState","msg","color","background","setMessage","className","style","onClick","items","Math","floor","random","length","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAwBA,SAASA,EAAT,GAA+B,IAAXC,EAAU,EAAVA,QAAU,EACuBC,mBAAS,CACtDC,IAAK,sBACLC,MAAO,UAHe,0BACjBD,EADiB,EACjBA,IAAYE,EADK,EACZD,MAAqBE,EADT,KAM1B,OACI,qBACIC,UAAU,YACVC,MAAO,CAAEH,cACTI,QAAS,kBAAMH,GArBXI,EAqB6BT,GApB5BU,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,UADlD,IAAgBJ,GAkBR,SAIEP,IAIVH,EAAUe,aAAe,CACrBd,QAAS,CACL,CAAEE,IAAK,iBAAkBC,MAAO,SAChC,CAAED,IAAK,sBAAuBC,MAAO,SACrC,CAAED,IAAK,mBAAoBC,MAAO,SAClC,CAAED,IAAK,oBAAqBC,MAAO,SACnC,CAAED,IAAK,sBAAuBC,MAAO,SACrC,CAAED,IAAK,oBAAqBC,MAAO,SACnC,CAAED,IAAK,eAAgBC,MAAO,SAC9B,CAAED,IAAK,gBAAiBC,MAAO,SAC/B,CAAED,IAAK,OAAQC,MAAO,SACtB,CAAED,IAAK,sBAAuBC,MAAO,aACrC,CAAED,IAAK,yBAA0BC,MAAO,aACxC,CAAED,IAAK,mBAAoBC,MAAO,aAClC,CAAED,IAAK,2BAA4BC,MAAO,aAC1C,CAAED,IAAK,sBAAuBC,MAAO,aACrC,CAAED,IAAK,6BAA8BC,MAAO,aAC5C,CAAED,IAAK,qBAAsBC,MAAO,OACpC,CAAED,IAAK,kBAAmBC,MAAO,OACjC,CAAED,IAAK,qBAAsBC,MAAO,OACpC,CAAED,IAAK,uBAAwBC,MAAO,OACtC,CAAED,IAAK,iBAAkBC,MAAO,SAIzBJ,QCvDAgB,EANH,kBACR,sBAAMT,UAAU,MAAhB,SACI,cAAC,EAAD,OCOOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.26a2378c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport './EightBall.css';\r\n\r\n/**\r\n * Picks a random item from an array.\r\n * \r\n * @template T Item type stored in items.\r\n * \r\n * @param {T[]} items List of items.\r\n * \r\n * @returns Random item in items.\r\n */\r\nfunction choice(items) {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\n/**\r\n * Constructs an EightBall component.\r\n * \r\n * @param {{ answers: { msg: string, color: string }[] }} props Component properties.\r\n * \r\n * @returns A new EightBall component.\r\n */\r\nfunction EightBall({answers}) {\r\n    const [{ msg, color: background }, setMessage] = useState({\r\n        msg: \"Think of a Question\",\r\n        color: \"black\"\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className=\"EightBall\"\r\n            style={{ background }}\r\n            onClick={() => setMessage(choice(answers))}\r\n        >{msg}</div>\r\n    );\r\n};\r\n\r\nEightBall.defaultProps = {\r\n    answers: [\r\n        { msg: \"It is certain.\", color: \"green\" },\r\n        { msg: \"It is decidedly so.\", color: \"green\" },\r\n        { msg: \"Without a doubt.\", color: \"green\" },\r\n        { msg: \"Yes - definitely.\", color: \"green\" },\r\n        { msg: \"You may rely on it.\", color: \"green\" },\r\n        { msg: \"As I see it, yes.\", color: \"green\" },\r\n        { msg: \"Most likely.\", color: \"green\" },\r\n        { msg: \"Outlook good.\", color: \"green\" },\r\n        { msg: \"Yes.\", color: \"green\" },\r\n        { msg: \"Signs point to yes.\", color: \"goldenrod\" },\r\n        { msg: \"Reply hazy, try again.\", color: \"goldenrod\" },\r\n        { msg: \"Ask again later.\", color: \"goldenrod\" },\r\n        { msg: \"Better not tell you now.\", color: \"goldenrod\" },\r\n        { msg: \"Cannot predict now.\", color: \"goldenrod\" },\r\n        { msg: \"Concentrate and ask again.\", color: \"goldenrod\" },\r\n        { msg: \"Don't count on it.\", color: \"red\" },\r\n        { msg: \"My reply is no.\", color: \"red\" },\r\n        { msg: \"My sources say no.\", color: \"red\" },\r\n        { msg: \"Outlook not so good.\", color: \"red\" },\r\n        { msg: \"Very doubtful.\", color: \"red\" },\r\n    ]\r\n};\r\n\r\nexport default EightBall;\r\n","import './App.css';\nimport EightBall from './EightBall';\n\nconst App = () => (\n    <main className=\"App\">\n        <EightBall />\n    </main>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}